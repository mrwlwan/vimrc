"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Last Update: 2022-03-18
" By: mrwlwan@gmail.com
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 自定义常量
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:my_vimrc_name='myvimrc'
let g:my_vimfiles=$VIM.'/.myvim'
let g:my_vimrc=$VIM.'/'.g:my_vimrc_name
let g:my_plugged=g:my_vimfiles.'/plugged'
let g:my_backup=g:my_vimfiles.'/mypersist/mybackup'
let g:my_view=g:my_vimfiles.'/mypersist/myview'
let g:my_swap=g:my_vimfiles.'/mypersist/myswap'
let g:my_undo=g:my_vimfiles.'/mypersist/myundo'
let g:my_ctrlp=g:my_vimfiles.'/mypersist/myctrlp'


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 预设置
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible                                 " VIM 必须先设置这行
let &runtimepath=g:my_vimfiles                   " rtp
set runtimepath+=$VIMRUNTIME

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 加载插件
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
call plug#begin(g:my_plugged)
    " 替换增强, 同时可快速改变变量的命名方式
    Plug 'tpope/vim-abolish'
    " 命令栏增
    Plug 'vim-airline/vim-airline'
    " 自动插入删除配对符号, 跟 surround 的区别: 自动操作的, 但 surround 功能更丰富, 支持 html, xml 标签
    Plug 'jiangmiao/auto-pairs'
    " 支持对文件, 缓冲区, MRU(Most Recently Used)文件和标签进行模糊搜索, 支持正则表达式
    Plug 'ctrlpvim/ctrlp.vim'
    " ctrlp 的扩展, 支持对函数的模糊搜索
    Plug 'tacahiroy/ctrlp-funky'
    " 快速跳转
    Plug 'easymotion/vim-easymotion'
    " HTML/CSS/XML/PHP/HAML 等代码编写快捷工具
    Plug 'mattn/emmet-vim'
    " % 匹配跳转增强
    Plug 'benjifisher/matchit.zip'
    " 注释
    Plug 'scrooloose/nerdcommenter'
    " 文件目录树
    Plug 'scrooloose/nerdtree'
    " 彩色括号增强
    Plug 'luochen1990/rainbow'
    " 让 . 键可重复部分插件的操作
    Plug 'tpope/vim-repeat'
    " View 管理
    Plug 'vim-scripts/restore_view.vim'
    " Sessions 管理器
    Plug 'vim-scripts/sessionman.vim'
    " Solarized 主题
    Plug 'altercation/vim-colors-solarized'
    " Tab 键上下文自动补全
    Plug 'ervandew/supertab'
    " 高效操作括号、引号或html、xml标签相关的配对
    Plug 'tpope/vim-surround'
    " 文本对齐
    Plug 'godlygeek/tabular'
    " 快速选择标签间的内容, 默认 <enter> 键选择
    Plug 'gcmt/wildfire.vim'
call plug#end()

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 通用设置
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if has('win32') || has('win64')
    set termencoding=cp850                       " cmd.exe cp850
    set encoding=utf-8
    setglobal fileencoding=utf-8
    set fileencodings=ucs-bom,utf-8,utf-16le,cp1252,iso-8859-15 " Windows has traditionally used cp1252, so it's probably wise to fallback into cp1252 instead of eg. iso-8859-15. Newer Windows files might contain utf-8 or utf-16 LE so we might want to try them first.
endif
scriptencoding utf-8                             " 必须先设置 encoding, 再设置 scriptencoding
set viewoptions=folds,options,cursor,unix,slash  " 关闭启动 VIM 时的欢迎页
syntax on                                        " 语法高亮
filetype plugin indent on                        " 自动识别打开的文件类型
set background=dark                              " 设置黑背景色
set ruler                                        " 状态栏显示行号
set t_Co=256                                     " 开启256颜色
set number                                       " 左侧栏显示行号
set showmode                                     " 状态栏显示当前模式
set showcmd                                      " 在状态栏显示输入的命令
set wrap                                         " 自动折行
" set nowrap                                     " 禁止自动折行
set autoindent                                   " 开启自动缩进
set foldenable                                   " 启用自动折叠
set mouse=a                                      " 启用鼠标复制模式
set mousehide                                    " 打字时隐藏鼠标
set cursorline                                   " 高亮显示鼠标所在行
set showmatch                                    " 当输入一个左括号时显示自动匹配右括号
set incsearch                                    " 即时搜索(即时高亮显示输入的搜索内容)
set hlsearch                                     " 搜索词高亮显示
set ignorecase                                   " 搜索忽略大小写
set smartcase                                    " 搜索智能忽略大小写
set nojoinspaces                                 " 用 J 连接两行时中间不插入2个空格
set splitright                                   " 将新开的 split 窗口放在右边
set splitbelow                                   " 将新开的 split 窗口放在下边
set hidden                                       " 允许在未保存的情况下切换 Buffer
" set spell                                      " 拼写检查
set virtualedit=onemore                          " 允许光标移到一行最后一个字符的右侧
set history=1000                                 " 保存别史记录命令的条数
set iskeyword-=.                                 " 用于 * 搜索, 设定". # -"字符不属于搜索的关键词, 即可直接搜索这些字符
set iskeyword-=#
set iskeyword-=-
" set autowrite                                  " 自动保存
" set backup                                      " 自动备份
set nobackup
" let &backupdir=g:my_backup
" set swapfile                                    " 设置 swap
set noswapfile
" let &directory=g:my_swap
set undofile                                     " undo 备份
set undolevels=1000                              " undo 次数
set undoreload=10000                             " undo 行数
let &undodir=g:my_undo                           " 设置 undo 文件夹
let &viewdir=g:my_view                           " 设置 view 文件夹
set tabstop=4                                    " tab 字符的显示宽度
set expandtab                                    " tab 字符替换为空格
set softtabstop=4                                " tab 实际占用空格数
set shiftwidth=4                                 " 手动缩进字符数
" set showtabline=2                                " 总是显示标签栏
set tabpagemax=15                                " 显示的最大标签数
set scrolloff=5                                  " 保持在光标上下最少行数
set scrolljump=5                                 " 点击右边滚动条时滚动的行数
set textwidth=0                                  " 缩写 tw, 随窗口宽度自动折行
set linespace=0                                  " 行距
set winminheight=0                               " 窗口最小高度
set wildmenu                                     " 启用增强模式的命令行自动补全
set wildmode=list:longest,full                   " 在命令行 tab 键 wildmenu 显示可能匹配的文件列表，并使用最长的子串进行补全; 再次点击Tab键，可以在 wildmenu 中遍历匹配的文件列表
set whichwrap=b,s,h,l,<,>,[,]                    " 随意移动: 默认情况下, 在 VIM 中当光标移到一行最左边的时候, 我们继续按左键, 光标不能回到上一行的最右边. 同样地, 光标到了一行最右边的时候, 我们不能通过继续按右跳到下一行的最左边. 但是, 通过设置 whichwrap 我们可以对一部分按键开启这项功能
set list                                         " 显示非可见字符
set listchars=tab:›\ ,trail:•,extends:#,nbsp:.   " 高亮显示部分非可见字符
set backspace=indent,eol,start                   " 修复非兼容模式下退格和删除键的问题
set shortmess+=filmnrxoOtT                       " 避免一部分 hit enter 的提示
"set matchpairs+=<:>                             " 控制哪些字符可以通过 % 命令进行匹配
set pastetoggle=<F12>                            " 设定 paste 粘贴模式的开关(进入 paste 粘贴模式可处理粘贴时的缩进问题)
set guioptions-=m                                " 隐藏菜单栏
set guioptions-=T                                " 隐藏工具栏
set showtabline=0                                " 隐藏标签栏
set guifont=DejaVu\ Sans\ Mono\ for\ Powerline:h13,Consolas:h14,Courier_New:h14
source $VIMRUNTIME/mswin.vim                     " 启用 Windows 剪贴板操作方式: Ctrl+c, Ctrl+v
source $VIMRUNTIME/delmenu.vim                   " 解决菜单的乱码, 所以不要注释掉
source $VIMRUNTIME/menu.vim
" 改变当前目录为打开文件的目录
autocmd BufEnter * if bufname('') !~ '^\[A-Za-z0-9\]*://' | lcd %:p:h | endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugins 设置
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Airline
let g:airline_highlighting_cache = 1             " 增强性能
let g:airline_powerline_fonts = 1                " 使用 powerline 修改过的字体, 显示特殊符号
let g:airline#extensions#tabline#enabled = 1     " 启用顶部的 tabline, 用于显示 buffers
let g:airline#extensions#tabline#buffer_idx_mode = 1 " buffers index 显示格式
let g:airline#extensions#tabline#fnamemod = ':t' " Buffer 只显示文件名, 不显示全路径
" Auto-pairs
let g:AutoPairsFlyMode = 1                       " 启用飞行模式
" CtrlP
let g:ctrlp_cache_dir = g:my_ctrlp               " 设置 Cache 文件夹
" Ctrlp-funky
let g:ctrlp_funky_matchtype = 'path'             " 匹配字符高亮
let g:ctrlp_funky_syntax_highlight = 1           " 语法高亮
" Easymotion
let g:EasyMotion_smrtcase = 1                    " 智能大小写敏感
let g:EasyMotion_do_mapping = 0                  " 禁用默认的所有快捷键, 因为实在太多, 改为自定义个人所需的快捷键
" Matchit.zip
let b:match_ignorecase = 1                       " 忽略大小写
" Nerdcommenter 注释
let g:NERDSpaceDelims = 1                        "注释符后自动添加空格
" Rainbow 彩色括号
let g:rainbow_active=1
" Solarized 主题
let g:solarized_termcolors=256
let g:solarized_termtrans=1                      " 跟随终端的透明度
let g:solarized_contrast='normal'                " 颜色反差度: normal, high, low
let g:solarized_visibility='normal'              " 特殊字符显示: normal, high, low
colo solarized                                   " 启用 solarized 主题

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 快捷键映射
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let mapleader = ','                              " 指定 leader 键(默认是 '\', 改为 ',' 更大众化)
let maplocalleader = ','                         " 指定 maplocalleader 键
" 个人快捷键, 以 z 开头
noremap <leader>zh :noh<cr>                      " 取消高亮

" Vimrc 相关
" 编辑 vimrc 文件
map <leader>ee :execute ':e! '.g:my_vimrc<cr>
" 加载当前文件
map <leader>es :source %<cr>

" Buffer 相关
" 上/下一个 buffer
map <A-left> :bprevious<cr>
map <A-right> :bnext<cr>
" 关闭(强制)当前 buffer
map <A-down> :bdelete<cr>
map <A-up> :bdelete!<cr>
" 新建窗口打开上/下一个 buffer
map <C-A-left> :sbprevious<cr>
map <C-A-right> :sbnext<cr>
" 新建垂直窗口打开上/下一个 buffer
map <C-A-up> :vertical sbprevious<cr>
map <C-A-down> :vertical sbnext<cr>

" 窗口相关
" 循环切换窗口
map <A-w> <C-w>w
" 切换到左下上右边窗口
map <A-h> <C-w>h
map <A-j> <C-w>j
map <A-k> <C-w>k
map <A-l> <C-w>l
" 退出/关闭窗口
map <A-q> :quit<cr>
map <A-c> :close<cr>
" 关闭其它窗口
map <A-o> :only<cr>
" 向左下上右移动窗口
map <A-H> <C-w>H
map <A-J> <C-w>J
map <A-K> <C-w>K
map <A-L> <C-w>L
" 所有窗口等同大小
map <A-=> <C-w>=

" CtrlP
let g:ctrlp_map = '<leader>pp'

" CtrlP-funky
nnoremap <Leader>pf :CtrlPFunky<Cr>
nnoremap <Leader>pu :execute 'CtrlPFunky ' . expand('<cword>')<Cr>

" Easymotion
" 向后查找双字符
nmap <leader><leader>f <Plug>(easymotion-f2)
" 向前查找双字符
nmap <leader><leader>F <Plug>(easymotion-F2)
" 前后查找双字符
nmap <leader><leader>s <Plug>(easymotion-s2)

" NERDTree
" 开关 NERDTree
map <leader>nt :NERDTreeToggle<cr>
" 切换到 NERDTree 窗口
map <leader>nf :NERDTreeFocus<cr>
" NERDTree 查找
map <leader>nF :NERDTreeFind<cr>

" Wildfire
" Quick selection, 类似于 easymotion
nmap <leader>ws <Plug>(wildfire-quick-select)

" Repeat
" 必须放在快捷键映射的最后, 以防冲突
silent! call repeat#set("\<Plug>MyWonderfulMap", v:count)

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 其它
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
